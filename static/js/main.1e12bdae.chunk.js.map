{"version":3,"sources":["types/FilterTypeEnum.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","props","todos","selectedTodo","handleSelectTodo","className","map","todo","completed","title","id","isSelected","classnames","type","onClick","TodoFilter","filterType","setFilterType","handleInputChange","handleQueryDelete","query","value","onChange","e","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseModal","useState","selectedUser","setSelectedUser","useEffect","userId","response","href","email","name","App","setTodos","setQuery","setSelectedTodo","todosFromServer","useCallback","visibleTodos","useMemo","filteredTodos","filter","queryLower","toLowerCase","trim","includes","event","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e12bdae.chunk.js","sourcesContent":["export enum FilterType {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  handleSelectTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<TodoListProps> = (props) => {\n  const { todos, selectedTodo, handleSelectTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => {\n          const { completed, title, id } = todo;\n          const isSelected = todo.id === selectedTodo?.id;\n\n          return (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classnames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classnames({\n                      'far fa-eye-slash': isSelected,\n                      'fas fa-eye': !isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterType } from '../../types/FilterTypeEnum';\n\ntype TodoFilterProps = {\n  filterType: FilterType,\n  setFilterType: (filterType: FilterType) => void,\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleQueryDelete: () => void,\n  query: string,\n};\n\nexport const TodoFilter = (\n  {\n    filterType,\n    setFilterType,\n    handleInputChange,\n    handleQueryDelete,\n    query,\n  }\n  : TodoFilterProps,\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(e) => setFilterType(e?.target.value as FilterType)}\n          >\n            <option value={FilterType.All}>All</option>\n            <option value={FilterType.Active}>Active</option>\n            <option value={FilterType.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  handleCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const {\n    selectedTodo,\n    handleCloseModal,\n  } = props;\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(response => setSelectedUser(response));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {!selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/FilterTypeEnum';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterType, setFilterType] = useState(FilterType.All);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    switch (filterType) {\n      case FilterType.All:\n        filteredTodos = todos;\n        break;\n\n      case FilterType.Completed:\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      case FilterType.Active:\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => {\n        const queryLower = query.toLowerCase().trim();\n\n        return todo.title.toLowerCase().includes(queryLower);\n      });\n    }\n\n    return filteredTodos;\n  }, [filterType, todos, query]);\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                setFilterType={setFilterType}\n                query={query}\n                handleInputChange={handleInputChange}\n                handleQueryDelete={handleQueryDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    handleSelectTodo={handleSelectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}